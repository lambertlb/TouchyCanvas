<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<!-- POM file generated with GWT webAppCreator -->
	<modelVersion>4.0.0</modelVersion>
	<groupId>per.lambert.touchyCanvas</groupId>
	<artifactId>TouchyCanvas</artifactId>
	<packaging>war</packaging>
	<version>1.0-SNAPSHOT</version>
	<name>per.lambert.touchyCanvas.TouchyCanvas</name>

	<properties>

		<!-- Setting maven.compiler.source to something different to 1.8 needs 
			that you configure the sourceLevel in gwt-maven-plugin since GWT compiler 
			2.8 requires 1.8 (see gwt-maven-plugin block below) -->
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>

		<!-- Don't let your Mac use a crazy non-standard encoding -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<jetty-version>9.2.11.v20150529</jetty-version>
		<gwt.style>DETAILED</gwt.style>
	</properties>

	<dependencyManagement>
		<dependencies>
			<!-- ensure all GWT deps use the same version (unless overridden) -->
			<dependency>
				<groupId>com.google.gwt</groupId>
				<artifactId>gwt</artifactId>
				<version>2.9.0</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-user</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-dev</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.13.1</version>
			<scope>test</scope>
		</dependency>

		<!-- from example https://github.com/jetty-project/embedded-jetty-jsp/blob/master/pom.xml -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-annotations</artifactId>
			<version>${jetty-version}</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-webapp</artifactId>
			<version>${jetty-version}</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>apache-jsp</artifactId>
			<version>${jetty-version}</version>
			<type>jar</type>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>apache-jstl</artifactId>
			<version>${jetty-version}</version>
			<type>pom</type>
		</dependency>
	</dependencies>

	<build>
		<finalName>TouchyCanvas</finalName>
		<!-- Output classes directly into the webapp, so that IDEs and "mvn process-classes" 
			update them in DevMode -->
		<outputDirectory>${project.build.directory}/${project.build.finalName}/WEB-INF/classes</outputDirectory>

		<plugins>

			<!-- GWT Maven Plugin -->
			<plugin>
				<groupId>net.ltgt.gwt.maven</groupId>
				<artifactId>gwt-maven-plugin</artifactId>
				<version>1.0-rc-8</version>
				<executions>
					<execution>
						<goals>
							<goal>compile</goal>
							<goal>test</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<moduleName>per.lambert.touchyCanvas.TouchyCanvas</moduleName>
					<moduleShortName>TouchyCanvas</moduleShortName>
					<failOnError>true</failOnError>
					<!-- GWT compiler 2.8 requires 1.8, hence define sourceLevel here if 
						you use a different source language for java compilation -->
					<sourceLevel>1.8</sourceLevel>
					<!-- Compiler configuration -->
					<compilerArgs>
						<!-- Ask GWT to create the Story of Your Compile (SOYC) (gwt:compile) -->
						<arg>-compileReport</arg>
						<arg>-XcompilerMetrics</arg>
					</compilerArgs>
					<!-- DevMode configuration -->
					<warDir>${project.build.directory}/${project.build.finalName}</warDir>
					<classpathScope>compile+runtime</classpathScope>
					<!-- URL(s) that should be opened by DevMode (gwt:devmode). -->
					<startupUrls>
						<startupUrl>TouchyCanvas.html</startupUrl>
					</startupUrls>
				</configuration>
			</plugin>

			<!-- Skip normal test execution, we use gwt:test instead -->
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.17</version>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>

			<!-- Build a jetty server so this can be run on a local LAN. -->
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<appendAssemblyId>false</appendAssemblyId>
					<archive>
						<manifest>
							<mainClass>per.serverApp.ServerApp</mainClass>
						</manifest>
					</archive>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id> <!-- this is used for inheritance merges -->
						<phase>package</phase> <!-- bind to the packaging phase -->
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- copy outputs to TouchyCanvas folder -->
			<!-- This is so people can just get the deliverables and not have to actually 
				build the project -->
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.0.2</version>
				<executions>
					<execution>
						<id>copy-files-on-build</id>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/TouchyCanvas</outputDirectory>
							<resources>
								<resource>
									<directory>target</directory>
									<include>*.war</include>
									<include>*.jar</include>
									<filtering>false</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-files-on-build1</id>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/TouchyCanvas</outputDirectory>
							<resources>
								<resource>
									<directory>${basedir}</directory>
									<include>*.bat</include>
									<filtering>false</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<version>3.0.0</version>
				<configuration>
					<verbose>true</verbose>
					<filesets>
						<fileset>
							<directory>TouchyCanvas</directory>
							<followSymlinks>false</followSymlinks>
						</fileset>
						<fileset>
							<directory>${basedir}/src/main/webapp/WEB-INF</directory>
							<includes>
								<include>**/classes/**</include>
								<include>**/deploy/**</include>
							</includes>
							<followSymlinks>false</followSymlinks>
						</fileset>
						<fileset>
							<directory>${basedir}/src/main/webapp</directory>
							<includes>
								<include>**/touchycanvas/**</include>
							</includes>
							<followSymlinks>false</followSymlinks>
						</fileset>
<!-- 						<fileset>
							<directory>${basedir}/src/main</directory>
							<includes>
								<include>**/gwt-unitCache/**</include>
							</includes>
							<followSymlinks>false</followSymlinks>
						</fileset>
 -->						<fileset>
							<directory>${basedir}</directory>
							<includes>
								<include>**/www-test/**</include>
								<include>**/test-classes/**</include>
							</includes>
							<followSymlinks>false</followSymlinks>
						</fileset>
					</filesets>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
